// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP_INTEGRADOR.DataAccess;

#nullable disable

namespace TP_INTEGRADOR.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230906010613_TechOil")]
    partial class TechOil
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TP_INTEGRADOR.Entities.Project", b =>
                {
                    b.Property<int>("CodProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodProject");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodProject"), 1L, 1);

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("Direction");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(40)")
                        .HasColumnName("Name");

                    b.Property<bool>("State")
                        .HasColumnType("bit")
                        .HasColumnName("State");

                    b.HasKey("CodProject");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            CodProject = 1,
                            Direction = "Calle xD 1234",
                            Name = "Project number 1",
                            State = false
                        });
                });

            modelBuilder.Entity("TP_INTEGRADOR.Entities.Service", b =>
                {
                    b.Property<int>("CodService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodService");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodService"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("Description");

                    b.Property<decimal>("HourValue")
                        .HasColumnType("DECIMAL(18,0)")
                        .HasColumnName("HourValue");

                    b.Property<bool>("State")
                        .HasColumnType("bit")
                        .HasColumnName("State");

                    b.HasKey("CodService");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            CodService = 1,
                            Description = "Un servicio que hace bla bla bla",
                            HourValue = 123m,
                            State = true
                        });
                });

            modelBuilder.Entity("TP_INTEGRADOR.Entities.User", b =>
                {
                    b.Property<int>("CodUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodUser"), 1L, 1);

                    b.Property<int>("DNI")
                        .HasColumnType("int")
                        .HasColumnName("DNI");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)")
                        .HasColumnName("Password");

                    b.Property<int>("UserRole")
                        .HasColumnType("int")
                        .HasColumnName("UserRole");

                    b.HasKey("CodUser");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            CodUser = 1,
                            DNI = 12345678,
                            Name = "Maximiliano Viand",
                            Password = "admin1234",
                            UserRole = 1
                        });
                });

            modelBuilder.Entity("TP_INTEGRADOR.Entities.Work", b =>
                {
                    b.Property<int>("CodWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodWork");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodWork"), 1L, 1);

                    b.Property<int>("AmountHours")
                        .HasColumnType("int")
                        .HasColumnName("AmountHours");

                    b.Property<int>("CodProject")
                        .HasColumnType("int")
                        .HasColumnName("CodProject");

                    b.Property<int>("CodService")
                        .HasColumnType("int")
                        .HasColumnName("CodService");

                    b.Property<decimal>("Cost")
                        .HasColumnType("DECIMAL(18,0)")
                        .HasColumnName("Cost");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE")
                        .HasColumnName("Date");

                    b.Property<decimal>("ValuePerHour")
                        .HasColumnType("DECIMAL(18,0)")
                        .HasColumnName("ValuePerHour");

                    b.HasKey("CodWork");

                    b.ToTable("Works");

                    b.HasData(
                        new
                        {
                            CodWork = 1,
                            AmountHours = 35,
                            CodProject = 1,
                            CodService = 1,
                            Cost = 420m,
                            Date = new DateTime(2023, 9, 5, 22, 6, 13, 502, DateTimeKind.Local).AddTicks(2286),
                            ValuePerHour = 12m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
